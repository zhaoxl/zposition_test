<%= javascript_include_tag "http://g.tbcdn.cn/??kissy/k/1.3.1/kissy-min.js"%>
<style type="text/css" media="screen">
  .grid .g-u{vertical-align: middle;}
</style>
<li id="article_title_input" class="string input optional stringish">
  <label for="article_title" class=" label">图片</label>
  <div style="float: left;">
    <div class="grid">
        <input type="file" class="g-u" id="J_UploaderBtn" value="上传图片" name="file" postData='{"authenticity_token":"<%= form_authenticity_token %>"}' />
        <input type="hidden" id="J_Urls" name="urls" value="" />
        <div class="g-u">还可以上传<span id="J_UploadCount">3</span>张图片</div>
    </div>
    <ul id="J_UploaderQueue" class="grid">
      <script type="text/uploader-files">
          <%= raw current_admin_user.temp_upload_images.map{|img| {status: 1, id: img.id, name: img.image_file_file_name, url: img.image_file(:thumb), desc: ""}}.to_json%>
      </script>
        <!--修改主题增加desc图片描述-->
        <script type="text/uploader-theme">
            <li id="queue-file-{id}" class="g-u" data-name="{name}"> 
            <div class="pic"> 
                <a href="javascript:void(0);"><img class="J_Pic_{id} preview-img" src="" /></a> 
                </div> 
            <div class=" J_Mask_{id} pic-mask"></div> 
            <div class="status-wrapper"> 
                <div class="status waiting-status"><p>等待上传，请稍候</p></div> 
                <div class="status start-status progress-status success-status"> 
                    <div class="J_ProgressBar_{id}"><s class="loading-icon"></s>上传中...</div> 
                    </div> 
                <div class="status error-status"> 
                    <p class="J_ErrorMsg_{id}">上传失败，请重试！</p>
                </div>
            </div>
            <a class="J_Del_{id} del-pic" href="#">删除</a>
            <div class="desc J_Desc_{id}"></div>
            </li>
        </script>
    </ul>
  </div>
  <div style="clear: both"></div>
</li>


<script type="text/javascript">
    var S = KISSY;
    if (S.Config.debug) {
        var srcPath = "../../../../";
        S.config({
            packages:[
                {
                    name:"gallery",
                    path:srcPath,
                    charset:"utf-8"
                }
            ]
        });
    }
    var $ = S.Node.all;

    S.use('gallery/uploader/1.5/index,gallery/uploader/1.5/themes/imageUploader/index,gallery/uploader/1.5/themes/imageUploader/style.css', function (S, Uploader,ImageUploader) {
            //上传组件插件
            var plugins = 'gallery/uploader/1.5/plugins/auth/auth,' +
                    'gallery/uploader/1.5/plugins/urlsInput/urlsInput,' +
                    'gallery/uploader/1.5/plugins/proBars/proBars,' +
                    'gallery/uploader/1.5/plugins/filedrop/filedrop,' +
                    'gallery/uploader/1.5/plugins/preview/preview,' +
                    'gallery/uploader/1.5/plugins/tagConfig/tagConfig';

            S.use(plugins,function(S,Auth,UrlsInput,ProBars,Filedrop,Preview,TagConfig){
                var uploader = new Uploader('#J_UploaderBtn',{
                    //处理上传的服务器端脚本路径
                    action:"/admin/admin_user/ajax_upload_temp_image"
                });
                //上传成功后显示图片描述
                uploader.on('success',function(ev){
                    var result = ev.file.result;
                    if(result.desc){
                        var $desc = $('.J_Desc_'+ev.file.id);
                        $desc.html(result.desc);
                    }
                })

                //使用主题
                uploader.theme(new ImageUploader({
                            queueTarget:'#J_UploaderQueue'
                        }))
                    //验证插件
                        .plug(new Auth({
                            //最多上传个数
                            max:8,
                            //图片最大允许大小
                            maxSize:10000
                        }))
                    //url保存插件
                        .plug(new UrlsInput({target:'#J_Urls'}))
                    //进度条集合
                        .plug(new ProBars())
                    //拖拽上传
                        .plug(new Filedrop())
                    //图片预览
                        .plug(new Preview())
                        .plug(new TagConfig())
                ;
                //删除图片
                uploader.on('remove',function(ev){
                  ev.file.status == "success" && jQuery.ajax({
                	  type: "POST",
                  	url: "<%= admin_admin_user_ajax_destroy_temp_image_path%>",
                    data: {id: ev.file.result.id},
                  	dataType : "json",
                  	error:function(jqXHR, textStatus, errorThrown){
                  	},
                  	beforeSend:function(XMLHttpRequest){
                  	},
                  	success: function(json){
                  	}
                  });
                });
                //渲染默认数据
                uploader.restore();
            
        });
    })

</script>